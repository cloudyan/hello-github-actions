version: '3.8'

# volumes:
#   frontend-dist
#   backend-dist
#   mongo-data
#   redis-data
#   nginx-certs
#   nginx-conf
#   certbot-webroot

services:
  web:
    container_name: nginx-web
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx-certs:/etc/nginx/ssl
      - nginx-conf:/etc/nginx/nginx.conf
      - frontend-dist:/usr/share/nginx/html
      - certbot-webroot:/var/www/certbot
    depends_on:
      - api
      - certbot
    networks:
      - frontend
      - backend

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - nginx-certs:/etc/letsencrypt
      - certbot-webroot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email admin@x.com --agree-tos --no-eff-email -d x.com -d www.x.com
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  api:
    image: node:18-alpine
    container_name: nestjs-api
    working_dir: /app
    volumes:
      - backend-dist:/app
    command: npm run start:prod
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/app
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_USE_SSL=false
    depends_on:
      - mongo
      - minio
    networks:
      - backend

  mongo:
    image: mongo:4.4
    container_name: mongodb
    volumes:
      - mongo-data:/data/db
      - mongo-backup:/backup
    networks:
      - backend

  mongo-backup:
    image: mongo:4.4
    container_name: mongodb-backup
    volumes:
      - mongo-backup:/data/backup
    depends_on:
      - mongo
    networks:
      - backend
    command: |
      /bin/sh -c '
      while true; do
        echo "[$(date)] Starting backup..."
        mongodump --host mongo --out /data/backup/$(date +%Y%m%d_%H%M%S)
        echo "[$(date)] Backup completed"
        sleep 24h
      done
      '

networks:
  frontend:
  backend:

volumes:
  nginx-certs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/docker-apps/nginx/certs
  nginx-conf:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/docker-apps/nginx/nginx.conf
  backend-dist:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/docker-apps/backend-dist
  frontend-dist:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/docker-apps/frontend-dist
  mongo-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/docker-apps/mongo-data
  certbot-webroot:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/docker-apps/certbot-webroot
  mongo-backup:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ~/docker-backups/mongo-backup

# 工作进程数量
worker_processes auto;

# 事件模块配置
events {
    worker_connections 1024;
    multi_accept on;
}

http {
    # 基础配置
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # GZIP压缩
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1k;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml application/x-font-ttf font/opentype;

    # 文件上传大小限制
    # 增加 client_max_body_size 指令，设置请求体的最大大小为50M
    client_max_body_size 50M;

    # www 重定向到主域名
    server {
        listen 80;
        listen [::]:80;
        server_name www.x.com;
        return 301 https://x.com$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name www.x.com;

        ssl_certificate /etc/nginx/ssl/x.com.crt;
        ssl_certificate_key /etc/nginx/ssl/x.com.key;

        return 301 https://x.com$request_uri;
    }

    # HTTP 重定向到 HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name x.com;
        return 301 https://$server_name$request_uri;
    }

    # Let's Encrypt 验证路径
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # 主站点配置
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name x.com;

        # SSL配置
        ssl_certificate /etc/letsencrypt/live/x.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/x.com/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # 现代化SSL配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HSTS配置
        add_header Strict-Transport-Security "max-age=63072000" always;

        # 静态文件目录
        root /usr/share/nginx/html;
        index index.html;

        # 安全相关头信息
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # 静态文件缓存
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 1y;
            add_header Cache-Control "public, no-transform";
        }

        # 让 WordPress 通过子目录访问
        # location ^~ /articles/ {
        #    client_max_body_size 50M;
        #    rewrite ^/articles(/.*)$ $1 break;
        #    proxy_set_header Host $host;
        #    proxy_set_header X-Forwarded-Host $host:$server_port;
        #    proxy_set_header X-Real-IP $remote_addr;
        #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #    proxy_set_header X-Forwarded-Proto $scheme;
        #    proxy_pass http://1.2.3.4:8000/;
        # }

        # 重定向页面
        # location ~ /wp-(admin|login|content|includes)/ {
        #    client_max_body_size 50M;
        #    return 301 /articles$request_uri;
        # }

        # API代理（nestjs）
        location /api {
            proxy_pass http://1.2.3.4:8888;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # 处理 Vue 路由刷新
        # location @router {
        #     rewrite ^.*$ /index.html last;
        # }

        # Vue前端静态资源(history路由支持)
        location / {
            root /usr/share/nginx/html;
            index index.html;

            # 解决单页应用服务端路由的问题
            try_files  $uri $uri/ /index.html;

            # 非带 hash 的资源，需要配置 Cache-Control: no-cache，避免浏览器默认为强缓存
            expires -1;

            location ~* \.(js|css|jpg|jpeg|png|gif|ico|ttf|woff|woff2|eot|mp4|mp3)$ {
                expires 1y;
                add_header Cache-Control "public, no-transform";
            }
        }

        # 错误页面
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
    }
}
